############################ 
 # PROPOSALS POOL CONFIGS #
############################

## Proposals Pool configs

### Proposals Pool allows recycling proposals during negotiations (between rounds): the proposals made by the agents return to the pool when the agent makes a concession and change them for another proposal
pumas.users.proposalsPool.isRecyclingAllowed = true

### Are refills allowed?
pumas.users.proposalsPool.isRefillAllowed = true

## Max amount of refills allowed after the initial refill
pumas.users.proposalsPool.maxRefillsAllowed = 1

### Max amount proposals added on a refill. Ej: in the dataset we use 1682 is the max of movies => (1 refill of 841 + initial refill of 841 = 1682)
##CHANGE THIS ON THE CODE!!! DEPENDS ON THE AMOUNT OF MOVIES OF THE DATASET!
pumas.users.proposalsPool.maxProposalsAddedOnRefill = 841

############################ 
 # OPTIMIZATIONS CONFIGS #
############################

### OPTIMIZATION TOOGLE: OPT_NOT_USED_PROPOSALS_ENABLED
pumas.users.optimizations.reuseNotUsedProposalsEnabled = true

### OPTIMIZATION TOOGLE: OPT_UTILITY_CACHE_ENABLED
pumas.users.optimizations.utilityCacheEnabled = true


############################ 
 	  # MCP CONFIGS #
############################

### Concession Criterion
#### IDs FROM ConcessionCriteria ENUM [ UTILITY_THRESHOLD; CURRENT_PROPOSAL_UTILITY_LOSS_THRESHOLD ]
pumas.users.monotonicConcession.concessionCriterion = UTILITY_THRESHOLD
#### CRITERION_UTILITY_THRESHOLD configs (UT_threshold = UTILITY_THRESHOLD)
users.monotonicConcession.concessionCriterion.utilityThreshold.threshold = 0.65
#### CRITERION_CURRENT_PROPOSAL_UTILITY_LOSS_THRESHOLD (CPULT_threshold = CURRENT_PROPOSAL_UTILITY_LOSS_THRESHOLD)
users.monotonicConcession.concessionCriterion.currentProposalUtilityLossThreshold.threshold = 0.55

### IDs FROM InitialProposalStrategies ENUM [ EGOCENTRIC ]
pumas.users.monotonicConcession.initialProposalStrategy = EGOCENTRIC

### IDs FROM UtilityFunctionTypes ENUM [ RECOMMENDER_BASED ]
pumas.users.monotonicConcession.utilityFunctionType= RECOMMENDER_BASED

### IDs FROM ARPunishmentStrategies ENUM [ EASYGOING; FLEXIBLE; FLEXIBLE_PLUS; MINIMUM_SATISFACTION; TABOO; NONE ]
pumas.users.monotonicConcession.AlreadyRatedPunishmentStrategy= EASYGOING
pumas.users.monotonicConcession.AlreadyRatedPunishmentStrategy.flexibilityValue= 0.75
pumas.users.monotonicConcession.AlreadyRatedPunishmentStrategy.minSatisfactionValue= 0.6

### IDs From ProposalAcceptanceStrategies ENUM [STRICT; RELAXED]
pumas.users.monotonicConcession.proposalAcceptanceStrategy = STRICT
#### IDS FROM RelaxLevel ENUM (within the class "ProposalAcceptanceStrategyRelaxed_S")[LOW; MEDIUM; HIGH]
pumas.users.monotonicConcession.proposalAcceptanceStrategy.relaxed_s.relaxLevel = LOW
#### Recommended use values between 0 and 1, particularly between 0 and 0.1. Levels = [LOW = 0.025; MEDIUM = 0.05; HIGH= 0.1]
pumas.users.monotonicConcession.proposalAcceptanceStrategy.relaxed.relaxPercentage = 0.025

